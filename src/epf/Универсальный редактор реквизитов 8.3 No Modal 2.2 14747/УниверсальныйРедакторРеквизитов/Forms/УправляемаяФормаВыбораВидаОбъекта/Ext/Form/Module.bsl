// Добавляет в дерево значений ветку описаний объектов.
&НаСервере
Процедура ДобавитьВДеревоВидОбъекта(Дерево, Картинка, ИмяТипаОбъектов, ИмяТипаЕдЧисле, Представление)
	
	строкаТипа = Дерево.Строки.Добавить();
	строкаТипа.Картинка = Картинка;
	строкаТипа.ВидОбъекта = Представление;
	строкаТипа.Тип = ИмяТипаЕдЧисле;
	Для каждого мдОбъекта из Метаданные[ИмяТипаОбъектов] Цикл
		строкаВида = строкаТипа.Строки.Добавить();
		строкаВида.Картинка = Картинка;
		строкаВида.ВидОбъекта = мдОбъекта.Имя + ?(ПустаяСтрока(мдОбъекта.Синоним), "", " (" + мдОбъекта.Синоним + ")");
		строкаВида.Тип = ИмяТипаЕдЧисле;
		строкаВида.Вид = мдОбъекта.Имя;
	КонецЦикла;
	
КонецПроцедуры

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	Параметры.Свойство("РежимЗаписиЗагрузка", РежимЗаписиЗагрузка);
	//ВыбСсылка = Неопределено;
	Если Параметры.Свойство("ВыбСсылка", ВыбСсылка) Тогда
		Попытка
			мдСсылки = ВыбСсылка.Метаданные();
			Если Метаданные.Справочники.Индекс(мдСсылки) >= 0 Тогда
				Тип = "Справочник";
			ИначеЕсли Метаданные.Документы.Индекс(мдСсылки) >= 0 Тогда
				Тип = "Документ";
			ИначеЕсли Метаданные.ПланыВидовХарактеристик.Индекс(мдСсылки) >= 0 Тогда
				Тип = "ПланВидовХарактеристик";
			ИначеЕсли Метаданные.ПланыСчетов.Индекс(мдСсылки) >= 0 Тогда
				Тип = "ПланСчетов";
			ИначеЕсли Метаданные.ПланыВидовРасчета.Индекс(мдСсылки) >= 0 Тогда
				Тип = "ПланВидовРасчета";
			ИначеЕсли Метаданные.ПланыОбмена.Индекс(мдСсылки) >= 0 Тогда
				Тип = "ПланОбмена";
			ИначеЕсли Метаданные.БизнесПроцессы.Индекс(мдСсылки) >= 0 Тогда
				Тип = "БизнесПроцесс";
			ИначеЕсли Метаданные.Задачи.Индекс(мдСсылки) >= 0 Тогда
				Тип = "Задача";
			КонецЕсли;
			Вид = мдСсылки.Имя;
		Исключение
			мдСсылки = Неопределено;
			Тип = "";
			Вид = "";
		КонецПопытки;
	КонецЕсли;
	Если Не Параметры.Свойство("ПростаяФормаВыбора", ПростаяФормаВыбора) Тогда
		ПростаяФормаВыбора = Ложь;
	КонецЕсли;
	
	
	Дерево = РеквизитФормыВЗначение("ДеревоОбъектов");
	
	// Соберём доступные виды объектов в дерево
	ДобавитьВДеревоВидОбъекта(Дерево, БиблиотекаКартинок.Справочник, "Справочники", "Справочник", "Справочники");
	ДобавитьВДеревоВидОбъекта(Дерево, БиблиотекаКартинок.Документ, "Документы", "Документ", "Документы");
	ДобавитьВДеревоВидОбъекта(Дерево, БиблиотекаКартинок.ПланВидовХарактеристик, "ПланыВидовХарактеристик", "ПланВидовХарактеристик", "Планы видов характеристик");
	ДобавитьВДеревоВидОбъекта(Дерево, БиблиотекаКартинок.ПланСчетов, "ПланыСчетов", "ПланСчетов", "Планы счетов");
	ДобавитьВДеревоВидОбъекта(Дерево, БиблиотекаКартинок.ПланВидовРасчета, "ПланыВидовРасчета", "ПланВидовРасчета", "Планы видов расчёта");
	ДобавитьВДеревоВидОбъекта(Дерево, БиблиотекаКартинок.ПланОбмена, "ПланыОбмена", "ПланОбмена", "Планы обмена");
	ДобавитьВДеревоВидОбъекта(Дерево, БиблиотекаКартинок.БизнесПроцесс, "БизнесПроцессы", "БизнесПроцесс", "Бизнес процессы");
	ДобавитьВДеревоВидОбъекта(Дерево, БиблиотекаКартинок.Задача, "Задачи", "Задача", "Задачи");
	
	ЗначениеВРеквизитФормы(Дерево, "ДеревоОбъектов");
	
	// Установим текущую строку в дереве типов
	// Ищем строку с текущим типм/видом. Пользуем простой перебор. Кто может лучше - скажите как.
	Поз = 0;
	Нашли = Ложь;
	Для Каждого СтрокаТипа из Дерево.Строки Цикл
		Поз = Поз + 1;
		Для Каждого СтрокаВида из СтрокаТипа.Строки Цикл
			Если СтрокаВида.Тип = Тип И СтрокаВида.Вид = Вид Тогда
				Нашли = Истина;
				Прервать
			КонецЕсли;
			Поз = Поз + 1;
		КонецЦикла;
		Если Нашли Тогда
			Прервать
		КонецЕсли;
	КонецЦикла;
	ЭтаФорма.Элементы.ДеревоОбъектов.ТекущаяСтрока = Поз;
КонецПроцедуры

&НаКлиенте
Процедура ДеревоОбъектовВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	РежимПросмотраБД = ЭтаФорма.ВладелецФормы = Неопределено;
	Если ПустаяСтрока(Элемент.ТекущиеДанные.Вид) Тогда
		СтандартнаяОбработка = Ложь
	ИначеЕсли ПростаяФормаВыбора = Истина ИЛИ РежимПросмотраБД Тогда
		УдалитьСтарыйСписок();
	
		ДобавитьДинамическийСписокНаФорму(Элемент.ТекущиеДанные.Тип, Элемент.ТекущиеДанные.Вид);
		Если НЕ РежимПросмотраБД Тогда
			ЭтаФорма.ТекущийЭлемент = ЭтаФорма.Элементы.lyayСписокОбъектов;
		КонецЕсли;
	Иначе
		ОповеститьОВыборе(Новый Структура("Тип, Вид", Элемент.ТекущиеДанные.Тип, Элемент.ТекущиеДанные.Вид));
	КонецЕсли;
КонецПроцедуры

///////////////////////////////////////////////////////////////
// работа со списоком

// Добавляет динамический список вместо формы списка соответствующего объекта
//
&НаСервере
Процедура ДобавитьДинамическийСписокНаФорму(Тип, Вид)
	Если Тип = "Справочник" Тогда
		мдСсылки = Метаданные.Справочники[Вид];
	ИначеЕсли Тип = "Документ" Тогда
		мдСсылки = Метаданные.Документы[Вид];
	ИначеЕсли Тип = "ПланВидовХарактеристик" Тогда
		мдСсылки = Метаданные.ПланыВидовХарактеристик[Вид];
	ИначеЕсли Тип = "ПланСчетов" Тогда
		мдСсылки = Метаданные.ПланыСчетов[Вид];
	ИначеЕсли Тип = "ПланВидовРасчета" Тогда
		мдСсылки = Метаданные.ПланыВидовРасчета[Вид];
	ИначеЕсли Тип = "ПланОбмена" Тогда
		мдСсылки = Метаданные.ПланыОбмена[Вид];
	ИначеЕсли Тип = "БизнесПроцесс" Тогда
		мдСсылки = Метаданные.БизнесПроцессы[Вид];
	ИначеЕсли Тип = "Задача" Тогда
		мдСсылки = Метаданные.Задачи[Вид];
	Иначе
		Сообщить("Выбранный тип данных """ + Тип + """ не поддерживается.");
		Возврат;
	КонецЕсли;
	
	ИмяРеквизитаФормы = "lyayСписокОбъектов";
	// Добавляем реквизит формы ДинамическийСписок
	ДобавляемыеРеквизиты = Новый Массив;
	ДобавляемыеРеквизиты.Добавить(Новый РеквизитФормы(ИмяРеквизитаФормы,
									Новый ОписаниеТипов("ДинамическийСписок"),
									,
									мдСсылки.Имя + ?(ПустаяСтрока(мдСсылки.Синоним), "", " (" + мдСсылки.Синоним + ")"),
									Ложь));
	ЭтаФорма.ИзменитьРеквизиты(ДобавляемыеРеквизиты);
	
	ЭтаФорма[ИмяРеквизитаФормы].ОсновнаяТаблица = Тип + "." + Вид;
	ЭтаФорма[ИмяРеквизитаФормы].ПроизвольныйЗапрос = Ложь;
	
	// Создаём таблицу (элемент формы) для отображения данных
	ЭлементФормы = ЭтаФорма.Элементы.Добавить(ИмяРеквизитаФормы, Тип("ТаблицаФормы"), ЭтаФорма.Элементы.Группа1);
	ЭлементФормы.ПутьКДанным = ИмяРеквизитаФормы;
	ЭлементФормы.Подсказка = мдСсылки.Комментарий;
	ЭлементФормы.Заголовок = мдСсылки.Синоним;
	ЭлементФормы.УстановитьДействие("ВыборЗначения", "СписокВыбор");
	ЭлементФормы.РежимВыбора = НЕ РежимПросмотраБД;
	ЭлементФормы.ВыборГруппИЭлементов = ИспользованиеГруппИЭлементов.ГруппыИЭлементы;
	ЭлементФормы.РежимВыделения = ?(РежимПросмотраБД, РежимВыделенияТаблицы.Множественный, РежимВыделенияТаблицы.Одиночный);
	//ЭлементФормы.ТекущийЭлемент.ТекущиеДанные = ВыбСсылка; //Жалко не работает. Хорошо бы устанавливать текущую строку.
	
	// Создаём колонки в отображаемой таблице
	поз = 0;
	Для каждого мдРеквизита Из мдСсылки.СтандартныеРеквизиты Цикл
		Попытка
			поз = поз + 1;
			Колонка = ЭтаФорма.Элементы.Добавить(ЭлементФормы.Имя + мдРеквизита.Имя, Тип("ПолеФормы"), ЭлементФормы);
			Колонка.Вид = ?(мдРеквизита.Тип.Типы().Количество() = 1 И мдРеквизита.Тип.Типы()[0] = Тип("Булево"), ВидПоляФормы.ПолеФлажка, ВидПоляФормы.ПолеНадписи);
			Колонка.ПутьКДанным = ИмяРеквизитаФормы + "." + мдРеквизита.Имя;
			Колонка.Подсказка = мдРеквизита.Синоним;
		Исключение
			поз = поз - 1;
			ЭтаФорма.Элементы.Удалить(ЭтаФорма.Элементы.Найти(ЭлементФормы.Имя + мдРеквизита.Имя));
			Продолжить;
		КонецПопытки;
	КонецЦикла;
	// чтобы пользователь не удивился отсутствию таблицы
	Если поз <> мдСсылки.СтандартныеРеквизиты.Количество() Тогда
		Сообщить("Похоже у вас нет прав на эту таблицу :-(");
	КонецЕсли;
	
	// Добавляем кнопку
	ЭлементФормы = ЭтаФорма.Элементы.Добавить("lyayПользовательскиеДействия", Тип("КнопкаФормы"), ЭтаФорма.Элементы.lyayСписокОбъектовКоманднаяПанель);
	ЭлементФормы.Заголовок = "Удалить все";
	//ЭлементФормы.Имя = "lyayПользовательскиеДействия";
	ЭлементФормы.ИмяКоманды = "УдалитьВсе";
	
	ЭлементФормы = ЭтаФорма.Элементы.Добавить("lyayУдалитьВсеНавсегда", Тип("КнопкаФормы"), ЭтаФорма.Элементы.lyayСписокОбъектовКоманднаяПанель);
	ЭлементФормы.Заголовок = "Удалить все НАВСЕГДА";
	//ЭлементФормы.Имя = "lyayПользовательскиеДействия";
	ЭлементФормы.ИмяКоманды = "УдалитьВсеНавсегда";
	
КонецПроцедуры // ДобавитьДинамическийСписокНаФорму()

&НаСервере
Процедура УдалитьСтарыйСписок()
	ДинамичныйСписок = ЭтаФорма.Элементы.Найти("lyayСписокОбъектов");
	Если ДинамичныйСписок <> Неопределено Тогда
		// удаляем ревизит формы
		ВсеРеквизиты = ЭтаФорма.ПолучитьРеквизиты();
		Удаляемые = Новый Массив;
		Для Каждого рекв  из ВсеРеквизиты Цикл
			Если рекв.Имя = "lyayСписокОбъектов" Тогда
				Удаляемые.Добавить(рекв.Имя);
			КонецЕсли;
		КонецЦикла;
		ЭтаФорма.ИзменитьРеквизиты(, Удаляемые);
		
		// удаляем элемент формы
		ЭтаФорма.Элементы.Удалить(ДинамичныйСписок);
	КонецЕсли;
КонецПроцедуры

&НаСервере
Процедура УдалитьСодержимоеТаблицы(Тип, Вид, Навсегда = Ложь)
	ЭтоСправочникИлиПлан = Найти("Справочник, ПланВидовХарактеристик, ПланСчетов, ПланВидовРасчета, ПланОбмена", Тип) > 0;

	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	               |	таблица.Ссылка " + ?(Тип = "Документ", ", таблица.Проведен", "") + "
	               |ИЗ
	               |	" + Тип + "." +Вид + " КАК таблица
	               |ГДЕ
	               |	(НЕ таблица.ПометкаУдаления ИЛИ &ПолноеУдаление)" + ?(ЭтоСправочникИлиПлан, " И НЕ таблица.Предопределенный", "");
	Запрос.УстановитьПараметр("ПолноеУдаление", Навсегда);
	Выборка = Запрос.Выполнить().Выбрать();
	поз = 0;
	Сообщить("Всего " + Строка(Выборка.Количество()));
	НачатьТранзакцию();
	Пока Выборка.Следующий() Цикл
		поз = поз + 1;
		выбОбъект = Выборка.Ссылка.ПолучитьОбъект();
		
		Если выбОбъект = Неопределено Тогда
			Продолжить; // Подчинённый элемент был удалён
		КонецЕсли;
		
		Если Тип = "Документ" И Выборка.Проведен Тогда
			выбОбъект.Записать(РежимЗаписиДокумента.ОтменаПроведения);
		КонецЕсли;
		
		выбОбъект.ОбменДанными.Загрузка = РежимЗаписиЗагрузка;
		Если Навсегда Тогда
			выбОбъект.Удалить();
		Иначе
			Если ЭтоСправочникИлиПлан Тогда
				выбОбъект.УстановитьПометкуУдаления(Истина, Ложь);
			Иначе
				выбОбъект.УстановитьПометкуУдаления(Истина);
			КонецЕсли;
		КонецЕсли;
		Если поз % 300 Тогда
			ЗафиксироватьТранзакцию();
			
			НачатьТранзакцию();
		КонецЕсли;
	КонецЦикла;
	ЗафиксироватьТранзакцию();
	Сообщить("Готово");
КонецПроцедуры

&НаКлиенте
Процедура УдалитьВсе(Команда)
	УдалитьСодержимоеТаблицы(ЭтаФорма.Элементы.ДеревоОбъектов.ТекущиеДанные.Тип, ЭтаФорма.Элементы.ДеревоОбъектов.ТекущиеДанные.Вид);
КонецПроцедуры

&НаКлиенте
Процедура СписокВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	ОповеститьОВыборе(ВыбраннаяСтрока);
КонецПроцедуры

&НаКлиенте
Процедура УдалитьВсеНавсегда(Команда)
	Ответ = Вопрос("Вы действительно хотите НАВСЕГДА удалить всё в текущей таблице?
					|Осознаёте всю серьёзность последствий?", РежимДиалогаВопрос.ДаНет, 30, КодВозвратаДиалога.Нет);
	Если Ответ = КодВозвратаДиалога.Да Тогда
		УдалитьСодержимоеТаблицы(ЭтаФорма.Элементы.ДеревоОбъектов.ТекущиеДанные.Тип, ЭтаФорма.Элементы.ДеревоОбъектов.ТекущиеДанные.Вид, Истина);
	КонецЕсли;
КонецПроцедуры
