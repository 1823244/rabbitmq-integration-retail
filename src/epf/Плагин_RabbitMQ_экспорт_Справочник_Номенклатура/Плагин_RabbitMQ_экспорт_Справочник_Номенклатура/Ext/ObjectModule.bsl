#Область ПодключениеОбработкиКБСП

Функция СведенияОВнешнейОбработке() Экспорт

	ПараметрыРегистрации = ДополнительныеОтчетыИОбработки.СведенияОВнешнейОбработке();

	ПараметрыРегистрации.Вставить("Вид",ДополнительныеОтчетыИОбработкиКлиентСервер.ВидОбработкиДополнительнаяОбработка());
	ПараметрыРегистрации.Вставить("Версия","1.1");
	//ПараметрыРегистрации.Вставить("Назначение", Новый Массив);
	ПараметрыРегистрации.Вставить("Наименование","Плагин_RabbitMQ_экспорт_Справочник_Номенклатура");
	ПараметрыРегистрации.Вставить("БезопасныйРежим", Ложь);
	ПараметрыРегистрации.Вставить("Информация","Плагин_RabbitMQ_экспорт_Справочник_Номенклатура");
	ПараметрыРегистрации.Вставить("ВерсияБСП", "3.1.5.180");
	//ПараметрыРегистрации.Вставить("ОпределитьНастройкиФормы", Ложь);
	
	
	ТипКоманды = ДополнительныеОтчетыИОбработкиКлиентСервер.ТипКомандыОткрытиеФормы();
	ДобавитьКоманду(ПараметрыРегистрации.Команды, 
		"Открыть форму : Плагин спр. Номенклатура экспорт из Розницы",
		"Форма_Плагин_RabbitMQ_экспорт_Справочник_Номенклатура",
		ТипКоманды, 
		Ложь) ;
	
	
	Возврат ПараметрыРегистрации;
	
КонецФункции

Процедура ДобавитьКоманду(ТаблицаКоманд, Представление, Идентификатор, Использование, ПоказыватьОповещение = Ложь, Модификатор = "")

	//ТаблицаКоманд.Колонки.Добавить("Представление", РеквизитыТабличнойЧасти.Представление.Тип);
	//ТаблицаКоманд.Колонки.Добавить("Идентификатор", РеквизитыТабличнойЧасти.Идентификатор.Тип);
	//ТаблицаКоманд.Колонки.Добавить("Использование", Новый ОписаниеТипов("Строка"));
	//ТаблицаКоманд.Колонки.Добавить("ПоказыватьОповещение", РеквизитыТабличнойЧасти.ПоказыватьОповещение.Тип);
	//ТаблицаКоманд.Колонки.Добавить("Модификатор", РеквизитыТабличнойЧасти.Модификатор.Тип);
	//ТаблицаКоманд.Колонки.Добавить("Скрыть",      РеквизитыТабличнойЧасти.Скрыть.Тип);
	//ТаблицаКоманд.Колонки.Добавить("ЗаменяемыеКоманды", РеквизитыТабличнойЧасти.ЗаменяемыеКоманды.Тип);
	
//           ** Использование - Строка - тип команды:
//               "ВызовКлиентскогоМетода",
//               "ВызовСерверногоМетода",
//               "ЗаполнениеФормы",
//               "ОткрытиеФормы" или
//               "СценарийВБезопасномРежиме".
//               Для получения типов команд рекомендуется использовать функции
//               ДополнительныеОтчетыИОбработкиКлиентСервер.ТипКоманды<ИмяТипа>.
//               В комментариях к этим функциям также даны шаблоны процедур-обработчиков команд.

	НоваяКоманда = ТаблицаКоманд.Добавить() ;
	НоваяКоманда.Представление = Представление ;
	НоваяКоманда.Идентификатор = Идентификатор ;
	НоваяКоманда.Использование = Использование ;
	НоваяКоманда.ПоказыватьОповещение = ПоказыватьОповещение ;
	НоваяКоманда.Модификатор = Модификатор ;
КонецПроцедуры


#КонецОбласти 	


// Описание_метода
//
// Параметры:
//	Номенклатура	- СправочникСсылка.Номенклатура / СправочникОбъект.Номенклатура - при чтении узла обмена сюда будут приходить именно объекты
//
// Возвращаемое значение:
//	Тип: Тип_значения
//
Функция ВыгрузитьОбъект(Номенклатура) Экспорт
	
	
	Если ТипЗнч(Номенклатура) = Тип("СправочникСсылка.Номенклатура") Тогда
		Обк = Номенклатура.ПолучитьОбъект(); 
	Иначе 
		Обк = Номенклатура; 
	КонецЕсли;
	
	
	ПараметрыЗаписиJSON = Новый ПараметрыЗаписиJSON(ПереносСтрокJSON.Авто, Символы.Таб);
	ЗаписьJson = Новый ЗаписьJSON;
	ЗаписьJson.УстановитьСтроку(ПараметрыЗаписиJSON);
	
	// Это основной объект json-сообщения
	СтруктураОбъекта = Новый Структура;
	
	СтруктураОбъекта.Вставить("source", "Retail");
	СтруктураОбъекта.Вставить("type", Обк.метаданные().ПолноеИмя());
	СтруктураОбъекта.Вставить("datetime", XMLСтрока(ТекущаяДатаСеанса()));
	
	identification = ксп_ЭкспортСлужебный.СоздатьУзелIdentification(Обк.Ссылка);
	СтруктураОбъекта.Вставить("identification", identification);
	
	definition = ксп_ЭкспортСлужебный.СоздатьУзелDefinition(Обк.Ссылка);
	
	#Область ЦеноваяГруппа
	ЦеноваяГруппа = ксп_ЭкспортСлужебный.СоздатьУзелIdentification(Обк.ЦеноваяГруппа);
	definition.Вставить("ЦеноваяГруппа", ЦеноваяГруппа);
	#КонецОбласти
	
	#Область ВидНоменклатуры
	ВидНоменклатуры = ксп_ЭкспортСлужебный.СоздатьУзелIdentification(Обк.ВидНоменклатуры);//справочник
	definition.Вставить("ВидНоменклатуры", ВидНоменклатуры); 	
	#КонецОбласти
	
	#Область СтавкаНДС
	СтавкаНДС = ксп_ЭкспортСлужебный.СоздатьУзелIdentification(Обк.СтавкаНДС);//перечисление
	definition.Вставить("СтавкаНДС", СтавкаНДС); 	
	#КонецОбласти
	
	//------------------------------------------------------
	
	СтруктураОбъекта.Вставить("definition", definition);
	
	//// Это - данные выгружаемого объекта
	//object = ксп_ЭкспортСлужебный.СоздатьУзел(Обк.Ссылка);//справочник
	////object = Новый Структура;
	////object.Вставить("Ref", 			Строка(Обк.Ссылка.УникальныйИдентификатор()));
	////object.Вставить("DeletionMark", Обк.ПометкаУдаления);
	////object.Вставить("Code",			Обк.Код);

	//#Область ВидНоменклатуры
	//ВидНоменклатуры = ксп_ЭкспортСлужебный.СоздатьУзел(Обк.ВидНоменклатуры);//справочник
	////ВидНоменклатуры = Новый Структура;
	////ВидНоменклатуры.Вставить("type", Обк.ВидНоменклатуры.метаданные().ПолноеИмя());
	////ВидНоменклатуры.Вставить("ref", Строка(Обк.ВидНоменклатуры.УникальныйИдентификатор()));
	////ВидНоменклатуры.Вставить("ТипНоменклатуры", Строка(Обк.ВидНоменклатуры.ТипНоменклатуры));
	//
	//	#Область ТипНоменклатуры
	//	//ТипНоменклатуры = Новый Структура;
	//	//ТипНоменклатуры.Вставить("type", Обк.ВидНоменклатуры.ТипНоменклатуры.метаданные().ПолноеИмя());
	//	//ТипНоменклатуры.Вставить("Значение", Строка(Обк.ВидНоменклатуры.ТипНоменклатуры));
	//	
	//	ТипНоменклатуры = ксп_ЭкспортСлужебный.СоздатьУзел(Обк.ВидНоменклатуры.ТипНоменклатуры);//перечисление
	//	ВидНоменклатуры.Вставить("ТипНоменклатуры", ТипНоменклатуры); 	
	//	#КонецОбласти
	//
	//
	//object.Вставить("ВидНоменклатуры", ВидНоменклатуры); 	
	//#КонецОбласти

	//#Область ЦеноваяГруппа
	//ЦеноваяГруппа = ксп_ЭкспортСлужебный.СоздатьУзел(Обк.ЦеноваяГруппа);
	////ЦеноваяГруппаСтруктура = Новый Структура;
	////ЦеноваяГруппаСтруктура.Вставить("type", Обк.ЦеноваяГруппа.метаданные().ПолноеИмя());
	////ЦеноваяГруппаСтруктура.Вставить("ref", Строка(Обк.ЦеноваяГруппа.УникальныйИдентификатор()));
	//
	//object.Вставить("ЦеноваяГруппа", ЦеноваяГруппа); 	
	//#КонецОбласти
	//
	//СтруктураОбъекта.Вставить("object", object);
	
	ЗаписатьJSON(ЗаписьJson, СтруктураОбъекта);
	json = ЗаписьJson.Закрыть();
	
	Возврат json;
	
	
	Возврат Неопределено;
	
КонецФункции
