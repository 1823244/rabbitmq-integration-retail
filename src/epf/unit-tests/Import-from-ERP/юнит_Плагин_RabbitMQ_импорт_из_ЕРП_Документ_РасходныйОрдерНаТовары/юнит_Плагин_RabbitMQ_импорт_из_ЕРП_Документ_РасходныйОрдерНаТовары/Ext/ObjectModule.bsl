// чек-лист по доработке для другого вида объекта

//	поменять макет


Перем КонтекстЯдра;
Перем Ожидаем;
Перем ИнтеграцияРэббит;

Перем ЭтоЗначениеЗаполняетсяПередЗапускомТеста;
Перем ЭтоЗначениеЗаполняетсяПослеЗапускаТеста;
Перем ТекстИсключенияПадающегоТеста;

Процедура Инициализация(КонтекстЯдраПараметр) Экспорт
	КонтекстЯдра = КонтекстЯдраПараметр;
	Ожидаем = КонтекстЯдра.Плагин("УтвержденияBDD");
	ИнтеграцияРэббит = КонтекстЯдра.Плагин("ИнтеграцияРэббит");
КонецПроцедуры

Процедура ЗаполнитьНаборТестов(НаборТестов) Экспорт
	
	НаборТестов.Добавить("ТестПлагина");
	//НаборТестов.Добавить("ТестДолжен_ПроверитьРезультатТестированияОтсутствующегоМетода");
	//НаборТестов.Добавить("ТестДолжен_ПроверитьВызов_ПослеЗапускаТеста");
	//НаборТестов.Добавить("ТестДолжен_ПроверитьВызов_ПослеЗапускаТеста_УПадающегоТеста");
	//НаборТестов.Добавить("ТестДолжен_ПроверитьРезультатТеста_Когда_ПередЗапускаТеста_СОшибкой");
	//НаборТестов.Добавить("ТестДолжен_ПроверитьРезультатТеста_Когда_ПослеЗапускаТеста_СОшибкой");
	
КонецПроцедуры

Процедура ПередЗапускомТеста() Экспорт
	ЭтоЗначениеЗаполняетсяПередЗапускомТеста = Истина;
	ЭтоЗначениеЗаполняетсяПослеЗапускаТеста = Неопределено;
	
	НачатьТранзакцию();
КонецПроцедуры

Процедура ПослеЗапускаТеста() Экспорт
	ЭтоЗначениеЗаполняетсяПослеЗапускаТеста = Истина;
	
	ОтменитьТранзакцию();
КонецПроцедуры

Процедура ПередЗапускомТеста_СОшибкой() Экспорт
	ВызватьИсключение "ПередЗапускомТеста_СОшибкой";
КонецПроцедуры

Процедура ПослеЗапускаТеста_СОшибкой() Экспорт
	ВызватьИсключение "ПослеЗапускаТеста_СОшибкой";
КонецПроцедуры





// проверяет лишь факт выполнения метода плагина
Процедура ТестПлагина() Экспорт
	
	json = ЭтотОбъект.ПолучитьМакет("Макет").ПолучитьТекст();
	
	Рез = ИнтеграцияРэббит.Импорт_ПолучитьСтруктуруИзJson(json);
	тДанные = рез.ДанныеСтруктура;
	Объект = рез.Объект;
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"выбрать гуид из регистрСведений.ксп_РасходныйОрдерНаТовары_ЕРП где гуид = &гуид";
	Запрос.УстановитьПараметр("гуид", тДанные.identification.Ref);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	Если РезультатЗапроса.Пустой() Тогда
		ВызватьИсключение "Объект не загрузился!";
	КонецЕсли;
	
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		Ожидаем.Что(
			Новый УникальныйИдентификатор(тДанные.identification.Ref))
			.Равно(
			Новый УникальныйИдентификатор(ВыборкаДетальныеЗаписи.гуид));
	КонецЦикла;
	
	
КонецПроцедуры


 