#Область ПодключениеОбработкиКБСП

Функция СведенияОВнешнейОбработке() Экспорт

	ПараметрыРегистрации = ДополнительныеОтчетыИОбработки.СведенияОВнешнейОбработке();

	ПараметрыРегистрации.Вставить("Вид",ДополнительныеОтчетыИОбработкиКлиентСервер.ВидОбработкиДополнительнаяОбработка());
	ПараметрыРегистрации.Вставить("Версия","1.1");
	//ПараметрыРегистрации.Вставить("Назначение", Новый Массив);
	ПараметрыРегистрации.Вставить("Наименование","Плагин_RabbitMQ_экспорт_Справочник_ВидыЦен");
	ПараметрыРегистрации.Вставить("БезопасныйРежим", Ложь);
	ПараметрыРегистрации.Вставить("Информация","Плагин_RabbitMQ_экспорт_Справочник_ВидыЦен");
	ПараметрыРегистрации.Вставить("ВерсияБСП", "3.1.5.180");
	//ПараметрыРегистрации.Вставить("ОпределитьНастройкиФормы", Ложь);
	
	
	ТипКоманды = ДополнительныеОтчетыИОбработкиКлиентСервер.ТипКомандыОткрытиеФормы();
	ДобавитьКоманду(ПараметрыРегистрации.Команды, 
		"Открыть форму : Плагин_RabbitMQ_экспорт_Справочник_ВидыЦен",
		"Форма_Плагин_RabbitMQ_экспорт_Справочник_ВидыЦен",
		ТипКоманды, 
		Ложь) ;
	
	
	Возврат ПараметрыРегистрации;
	
КонецФункции

Процедура ДобавитьКоманду(ТаблицаКоманд, Представление, Идентификатор, Использование, ПоказыватьОповещение = Ложь, Модификатор = "")

	//ТаблицаКоманд.Колонки.Добавить("Представление", РеквизитыТабличнойЧасти.Представление.Тип);
	//ТаблицаКоманд.Колонки.Добавить("Идентификатор", РеквизитыТабличнойЧасти.Идентификатор.Тип);
	//ТаблицаКоманд.Колонки.Добавить("Использование", Новый ОписаниеТипов("Строка"));
	//ТаблицаКоманд.Колонки.Добавить("ПоказыватьОповещение", РеквизитыТабличнойЧасти.ПоказыватьОповещение.Тип);
	//ТаблицаКоманд.Колонки.Добавить("Модификатор", РеквизитыТабличнойЧасти.Модификатор.Тип);
	//ТаблицаКоманд.Колонки.Добавить("Скрыть",      РеквизитыТабличнойЧасти.Скрыть.Тип);
	//ТаблицаКоманд.Колонки.Добавить("ЗаменяемыеКоманды", РеквизитыТабличнойЧасти.ЗаменяемыеКоманды.Тип);
	
//           ** Использование - Строка - тип команды:
//               "ВызовКлиентскогоМетода",
//               "ВызовСерверногоМетода",
//               "ЗаполнениеФормы",
//               "ОткрытиеФормы" или
//               "СценарийВБезопасномРежиме".
//               Для получения типов команд рекомендуется использовать функции
//               ДополнительныеОтчетыИОбработкиКлиентСервер.ТипКоманды<ИмяТипа>.
//               В комментариях к этим функциям также даны шаблоны процедур-обработчиков команд.

	НоваяКоманда = ТаблицаКоманд.Добавить() ;
	НоваяКоманда.Представление = Представление ;
	НоваяКоманда.Идентификатор = Идентификатор ;
	НоваяКоманда.Использование = Использование ;
	НоваяКоманда.ПоказыватьОповещение = ПоказыватьОповещение ;
	НоваяКоманда.Модификатор = Модификатор ;
КонецПроцедуры


#КонецОбласти 	

Функция ВыгрузитьОбъект(ДанныеСсылка) Экспорт
	Если ТипЗнч(ДанныеСсылка) = Тип("СправочникСсылка.ВидыЦен") Тогда
		Обк = ДанныеСсылка.ПолучитьОбъект(); 
	Иначе 
		Обк = ДанныеСсылка; 
	КонецЕсли;
	ПараметрыЗаписиJSON = Новый ПараметрыЗаписиJSON(ПереносСтрокJSON.Авто, Символы.Таб);
	ЗаписьJson = Новый ЗаписьJSON;
	ЗаписьJson.УстановитьСтроку(ПараметрыЗаписиJSON);
	// Это основной объект json-сообщения
	СтруктураОбъекта = Новый Структура;
	СтруктураОбъекта.Вставить("source", "ERP");
	СтруктураОбъекта.Вставить("type", Обк.метаданные().ПолноеИмя());
	СтруктураОбъекта.Вставить("datetime", XMLСтрока(ТекущаяДатаСеанса()));
	identification = ксп_ЭкспортСлужебный.СоздатьУзелIdentification(Обк.Ссылка);
	СтруктураОбъекта.Вставить("identification", identification);
	//	DEFINITION          
	definition = ксп_ЭкспортСлужебный.СоздатьУзелDefinition(Обк.Ссылка);
	definition.Вставить("АлгоритмРасчетаЦены", Обк.АлгоритмРасчетаЦены);
	definition.Вставить("ВалютаЦены", Обк.ВалютаЦены);
	definition.Вставить("Идентификатор", Обк.Идентификатор);
	definition.Вставить("ИспользоватьПриПередачеМеждуОрганизациями", Обк.ИспользоватьПриПередачеМеждуОрганизациями);
	definition.Вставить("ИспользоватьПриПродаже", Обк.ИспользоватьПриПродаже);
	definition.Вставить("ОкруглятьВБольшуюСторону", Обк.ОкруглятьВБольшуюСторону);
	definition.Вставить("ПорогСрабатывания", Обк.ПорогСрабатывания);
	definition.Вставить("РеквизитДопУпорядочивания", Обк.РеквизитДопУпорядочивания);
	definition.Вставить("СпособЗаданияЦены", ксп_ЭкспортСлужебный.СоздатьУзелIdentification(Обк.СпособЗаданияЦены));
	definition.Вставить("СхемаКомпоновкиДанных", Обк.СхемаКомпоновкиДанных);
	definition.Вставить("ЦенаВключаетНДС", Обк.ЦенаВключаетНДС);

	//------------------------------------------------------     ТЧ ВлияющиеВидыЦен

	ТЧВлияющиеВидыЦен = Новый Массив;

	Для сч = 0 По обк.ВлияющиеВидыЦен.Количество()-1 Цикл

		стрк = обк.ВлияющиеВидыЦен[сч];

		НовСтр = Новый Структура;

		НовСтр.Вставить("ВлияющийВидЦен", ксп_ЭкспортСлужебный.СоздатьУзелIdentification(стрк.ВлияющийВидЦен));
		ТЧВлияющиеВидыЦен.Добавить(НовСтр);

	КонецЦикла;

	definition.Вставить("ТЧВлияющиеВидыЦен", ТЧВлияющиеВидыЦен);

	//------------------------------------------------------     ТЧ ЦеновыеГруппы

	ТЧЦеновыеГруппы = Новый Массив;

	Для сч = 0 По обк.ЦеновыеГруппы.Количество()-1 Цикл

		стрк = обк.ЦеновыеГруппы[сч];

		НовСтр = Новый Структура;

		НовСтр.Вставить("АлгоритмРасчетаЦены", стрк.АлгоритмРасчетаЦены);
		НовСтр.Вставить("ЦеноваяГруппа", ксп_ЭкспортСлужебный.СоздатьУзелIdentification(стрк.ЦеноваяГруппа));
		ТЧЦеновыеГруппы.Добавить(НовСтр);

	КонецЦикла;

	definition.Вставить("ТЧЦеновыеГруппы", ТЧЦеновыеГруппы);

	//------------------------------------------------------     ТЧ ПравилаОкругленияЦены

	ТЧПравилаОкругленияЦены = Новый Массив;

	Для сч = 0 По обк.ПравилаОкругленияЦены.Количество()-1 Цикл

		стрк = обк.ПравилаОкругленияЦены[сч];

		НовСтр = Новый Структура;

		НовСтр.Вставить("НижняяГраницаДиапазонаЦен", стрк.НижняяГраницаДиапазонаЦен);
		НовСтр.Вставить("ПсихологическоеОкругление", стрк.ПсихологическоеОкругление);
		НовСтр.Вставить("ТочностьОкругления", стрк.ТочностьОкругления);
		ТЧПравилаОкругленияЦены.Добавить(НовСтр);

	КонецЦикла;

	definition.Вставить("ТЧПравилаОкругленияЦены", ТЧПравилаОкругленияЦены);

	//------------------------------------------------------     ТЧ ПорогиСрабатывания

	ТЧПорогиСрабатывания = Новый Массив;

	Для сч = 0 По обк.ПорогиСрабатывания.Количество()-1 Цикл

		стрк = обк.ПорогиСрабатывания[сч];

		НовСтр = Новый Структура;

		НовСтр.Вставить("ПорогСрабатывания", стрк.ПорогСрабатывания);
		НовСтр.Вставить("ЦеноваяГруппа", ксп_ЭкспортСлужебный.СоздатьУзелIdentification(стрк.ЦеноваяГруппа));
		ТЧПорогиСрабатывания.Добавить(НовСтр);

	КонецЦикла;

	definition.Вставить("ТЧПорогиСрабатывания", ТЧПорогиСрабатывания);




	//------------------------------------------------------ ФИНАЛ


	СтруктураОбъекта.Вставить("definition", definition);
	ЗаписатьJSON(ЗаписьJson, СтруктураОбъекта);
	json = ЗаписьJson.Закрыть();
	Возврат json;
КонецФункции



