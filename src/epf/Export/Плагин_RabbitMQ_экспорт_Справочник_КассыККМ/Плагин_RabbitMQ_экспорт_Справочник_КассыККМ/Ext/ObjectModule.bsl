#Область ПодключениеОбработкиКБСП

Функция СведенияОВнешнейОбработке() Экспорт

	ПараметрыРегистрации = ДополнительныеОтчетыИОбработки.СведенияОВнешнейОбработке();

	ПараметрыРегистрации.Вставить("Вид",ДополнительныеОтчетыИОбработкиКлиентСервер.ВидОбработкиДополнительнаяОбработка());
	ПараметрыРегистрации.Вставить("Версия","1.2");
	//ПараметрыРегистрации.Вставить("Назначение", Новый Массив);
	ПараметрыРегистрации.Вставить("Наименование","Плагин_RabbitMQ_экспорт_Справочник_КассыККМ");
	ПараметрыРегистрации.Вставить("БезопасныйРежим", Ложь);
	ПараметрыРегистрации.Вставить("Информация","Плагин_RabbitMQ_экспорт_Справочник_КассыККМ");
	ПараметрыРегистрации.Вставить("ВерсияБСП", "3.1.5.180");
	//ПараметрыРегистрации.Вставить("ОпределитьНастройкиФормы", Ложь);
	
	
	ТипКоманды = ДополнительныеОтчетыИОбработкиКлиентСервер.ТипКомандыОткрытиеФормы();
	ДобавитьКоманду(ПараметрыРегистрации.Команды, 
		"Открыть форму : Плагин_RabbitMQ_экспорт_Справочник_КассыККМ",
		"Форма_Плагин_RabbitMQ_экспорт_Справочник_КассыККМ",
		ТипКоманды, 
		Ложь) ;
	
	
	Возврат ПараметрыРегистрации;
	
КонецФункции

Процедура ДобавитьКоманду(ТаблицаКоманд, Представление, Идентификатор, Использование, ПоказыватьОповещение = Ложь, Модификатор = "")

	//ТаблицаКоманд.Колонки.Добавить("Представление", РеквизитыТабличнойЧасти.Представление.Тип);
	//ТаблицаКоманд.Колонки.Добавить("Идентификатор", РеквизитыТабличнойЧасти.Идентификатор.Тип);
	//ТаблицаКоманд.Колонки.Добавить("Использование", Новый ОписаниеТипов("Строка"));
	//ТаблицаКоманд.Колонки.Добавить("ПоказыватьОповещение", РеквизитыТабличнойЧасти.ПоказыватьОповещение.Тип);
	//ТаблицаКоманд.Колонки.Добавить("Модификатор", РеквизитыТабличнойЧасти.Модификатор.Тип);
	//ТаблицаКоманд.Колонки.Добавить("Скрыть",      РеквизитыТабличнойЧасти.Скрыть.Тип);
	//ТаблицаКоманд.Колонки.Добавить("ЗаменяемыеКоманды", РеквизитыТабличнойЧасти.ЗаменяемыеКоманды.Тип);
	
//           ** Использование - Строка - тип команды:
//               "ВызовКлиентскогоМетода",
//               "ВызовСерверногоМетода",
//               "ЗаполнениеФормы",
//               "ОткрытиеФормы" или
//               "СценарийВБезопасномРежиме".
//               Для получения типов команд рекомендуется использовать функции
//               ДополнительныеОтчетыИОбработкиКлиентСервер.ТипКоманды<ИмяТипа>.
//               В комментариях к этим функциям также даны шаблоны процедур-обработчиков команд.

	НоваяКоманда = ТаблицаКоманд.Добавить() ;
	НоваяКоманда.Представление = Представление ;
	НоваяКоманда.Идентификатор = Идентификатор ;
	НоваяКоманда.Использование = Использование ;
	НоваяКоманда.ПоказыватьОповещение = ПоказыватьОповещение ;
	НоваяКоманда.Модификатор = Модификатор ;
КонецПроцедуры


#КонецОбласти 	

 
Функция ВыгрузитьОбъект(ДанныеСсылка) Экспорт
	Если ТипЗнч(ДанныеСсылка) = Тип("СправочникСсылка.КассыККМ") Тогда
		Обк = ДанныеСсылка.ПолучитьОбъект(); 
	Иначе 
		Обк = ДанныеСсылка; 
	КонецЕсли;
	ПараметрыЗаписиJSON = Новый ПараметрыЗаписиJSON(ПереносСтрокJSON.Авто, Символы.Таб);
	ЗаписьJson = Новый ЗаписьJSON;
	ЗаписьJson.УстановитьСтроку(ПараметрыЗаписиJSON);
	// Это основной объект json-сообщения
	СтруктураОбъекта = Новый Структура;
	СтруктураОбъекта.Вставить("source", "retail");
	СтруктураОбъекта.Вставить("type", Обк.метаданные().ПолноеИмя());
	СтруктураОбъекта.Вставить("datetime", XMLСтрока(ТекущаяДатаСеанса()));
	identification = ксп_ЭкспортСлужебный.СоздатьУзелIdentification(Обк.Ссылка);
	СтруктураОбъекта.Вставить("identification", identification);
	//	DEFINITION          
	definition = ксп_ЭкспортСлужебный.СоздатьУзелDefinition(Обк.Ссылка);
	definition.Вставить("ИспользоватьБезПодключенияОборудования", Обк.ИспользоватьБезПодключенияОборудования);
	definition.Вставить("Магазин", ксп_ЭкспортСлужебный.СоздатьУзелIdentification(Обк.Магазин));
	definition.Вставить("НастройкаРаспределенияВыручкиПоСекциям", ксп_ЭкспортСлужебный.СоздатьУзелIdentification(Обк.НастройкаРаспределенияВыручкиПоСекциям));
	definition.Вставить("НеПечататьБумажныйЧек", Обк.НеПечататьБумажныйЧек);
	definition.Вставить("ОфлайнОборудование", ксп_ЭкспортСлужебный.СоздатьУзелIdentification(Обк.ОфлайнОборудование));
	definition.Вставить("ПодключаемоеОборудование", ксп_ЭкспортСлужебный.СоздатьУзелIdentification(Обк.ПодключаемоеОборудование));
	definition.Вставить("РабочееМесто", ксп_ЭкспортСлужебный.СоздатьУзелIdentification(Обк.РабочееМесто));
	definition.Вставить("РегистрационныйНомер", Обк.РегистрационныйНомер);
	definition.Вставить("СерийныйНомер", Обк.СерийныйНомер);
	definition.Вставить("СоответствиеВидовОплаты", ксп_ЭкспортСлужебный.СоздатьУзелIdentification(Обк.СоответствиеВидовОплаты));
	definition.Вставить("ТипКассы", ксп_ЭкспортСлужебный.СоздатьУзелIdentification(Обк.ТипКассы));
	definition.Вставить("ТипОборудования", ксп_ЭкспортСлужебный.СоздатьУзелIdentification(Обк.ТипОборудования));
	definition.Вставить("УдалитьРучнойРежимФормированияЧека", Обк.УдалитьРучнойРежимФормированияЧека);
	definition.Вставить("УдалитьФормироватьНефискальныеЧеки", Обк.УдалитьФормироватьНефискальныеЧеки);
	definition.Вставить("ШаблонЧекаККМ", ксп_ЭкспортСлужебный.СоздатьУзелIdentification(Обк.ШаблонЧекаККМ));
	definition.Вставить("ШаблонЧекаККМВозврат", ксп_ЭкспортСлужебный.СоздатьУзелIdentification(Обк.ШаблонЧекаККМВозврат));
	definition.Вставить("ШиринаЛенты", Обк.ШиринаЛенты);
	definition.Вставить("ЭлектронныйЧекEmailПередаютсяПрограммой1С", Обк.ЭлектронныйЧекEmailПередаютсяПрограммой1С);
	definition.Вставить("ЭлектронныйЧекSMSПередаютсяПрограммой1С", Обк.ЭлектронныйЧекSMSПередаютсяПрограммой1С);




	//------------------------------------------------------ ФИНАЛ


	СтруктураОбъекта.Вставить("definition", definition);
	ЗаписатьJSON(ЗаписьJson, СтруктураОбъекта);
	json = ЗаписьJson.Закрыть();
	Возврат json;
КонецФункции




