#Область ПодключениеОбработкиКБСП

Функция СведенияОВнешнейОбработке() Экспорт

	ПараметрыРегистрации = ДополнительныеОтчетыИОбработки.СведенияОВнешнейОбработке();

	ПараметрыРегистрации.Вставить("Вид",ДополнительныеОтчетыИОбработкиКлиентСервер.ВидОбработкиДополнительнаяОбработка());
	ПараметрыРегистрации.Вставить("Версия","1.1");
	//ПараметрыРегистрации.Вставить("Назначение", Новый Массив);
	ПараметрыРегистрации.Вставить("Наименование","Плагин_RabbitMQ_экспорт_Справочник_Организации");
	ПараметрыРегистрации.Вставить("БезопасныйРежим", Ложь);
	ПараметрыРегистрации.Вставить("Информация","Плагин_RabbitMQ_экспорт_Справочник_Организации");
	ПараметрыРегистрации.Вставить("ВерсияБСП", "3.1.5.180");
	//ПараметрыРегистрации.Вставить("ОпределитьНастройкиФормы", Ложь);
	
	
	ТипКоманды = ДополнительныеОтчетыИОбработкиКлиентСервер.ТипКомандыОткрытиеФормы();
	ДобавитьКоманду(ПараметрыРегистрации.Команды, 
		"Открыть форму : Плагин_RabbitMQ_экспорт_Справочник_Организации",
		"Форма_Плагин_RabbitMQ_экспорт_Справочник_Организации",
		ТипКоманды, 
		Ложь) ;
	
	
	Возврат ПараметрыРегистрации;
	
КонецФункции

Процедура ДобавитьКоманду(ТаблицаКоманд, Представление, Идентификатор, Использование, ПоказыватьОповещение = Ложь, Модификатор = "")

	//ТаблицаКоманд.Колонки.Добавить("Представление", РеквизитыТабличнойЧасти.Представление.Тип);
	//ТаблицаКоманд.Колонки.Добавить("Идентификатор", РеквизитыТабличнойЧасти.Идентификатор.Тип);
	//ТаблицаКоманд.Колонки.Добавить("Использование", Новый ОписаниеТипов("Строка"));
	//ТаблицаКоманд.Колонки.Добавить("ПоказыватьОповещение", РеквизитыТабличнойЧасти.ПоказыватьОповещение.Тип);
	//ТаблицаКоманд.Колонки.Добавить("Модификатор", РеквизитыТабличнойЧасти.Модификатор.Тип);
	//ТаблицаКоманд.Колонки.Добавить("Скрыть",      РеквизитыТабличнойЧасти.Скрыть.Тип);
	//ТаблицаКоманд.Колонки.Добавить("ЗаменяемыеКоманды", РеквизитыТабличнойЧасти.ЗаменяемыеКоманды.Тип);
	
//           ** Использование - Строка - тип команды:
//               "ВызовКлиентскогоМетода",
//               "ВызовСерверногоМетода",
//               "ЗаполнениеФормы",
//               "ОткрытиеФормы" или
//               "СценарийВБезопасномРежиме".
//               Для получения типов команд рекомендуется использовать функции
//               ДополнительныеОтчетыИОбработкиКлиентСервер.ТипКоманды<ИмяТипа>.
//               В комментариях к этим функциям также даны шаблоны процедур-обработчиков команд.

	НоваяКоманда = ТаблицаКоманд.Добавить() ;
	НоваяКоманда.Представление = Представление ;
	НоваяКоманда.Идентификатор = Идентификатор ;
	НоваяКоманда.Использование = Использование ;
	НоваяКоманда.ПоказыватьОповещение = ПоказыватьОповещение ;
	НоваяКоманда.Модификатор = Модификатор ;
КонецПроцедуры


#КонецОбласти 	

 
Функция ВыгрузитьОбъект(ДанныеСсылка) Экспорт
	Если ТипЗнч(ДанныеСсылка) = Тип("СправочникСсылка.Организации") Тогда
		Обк = ДанныеСсылка.ПолучитьОбъект(); 
	Иначе 
		Обк = ДанныеСсылка; 
	КонецЕсли;
	ПараметрыЗаписиJSON = Новый ПараметрыЗаписиJSON(ПереносСтрокJSON.Авто, Символы.Таб);
	ЗаписьJson = Новый ЗаписьJSON;
	ЗаписьJson.УстановитьСтроку(ПараметрыЗаписиJSON);
	// Это основной объект json-сообщения
	СтруктураОбъекта = Новый Структура;
	СтруктураОбъекта.Вставить("source", "retail");
	СтруктураОбъекта.Вставить("type", Обк.метаданные().ПолноеИмя());
	СтруктураОбъекта.Вставить("datetime", XMLСтрока(ТекущаяДатаСеанса()));
	identification = ксп_ЭкспортСлужебный.СоздатьУзелIdentification(Обк.Ссылка);
	СтруктураОбъекта.Вставить("identification", identification);
	//	DEFINITION          
	definition = ксп_ЭкспортСлужебный.СоздатьУзелDefinition(Обк.Ссылка);
	definition.Вставить("ГоловнаяОрганизация", ксп_ЭкспортСлужебный.СоздатьУзелIdentification(Обк.ГоловнаяОрганизация));
	definition.Вставить("ИНН", Обк.ИНН);
	definition.Вставить("КодПоОКАТО", Обк.КодПоОКАТО);
	definition.Вставить("КодПоОКПО", Обк.КодПоОКПО);
	definition.Вставить("КПП", Обк.КПП);
	definition.Вставить("НаименованиеПолное", Обк.НаименованиеПолное);
	definition.Вставить("НаименованиеСокращенное", Обк.НаименованиеСокращенное);
	definition.Вставить("ОбособленноеПодразделение", Обк.ОбособленноеПодразделение);
	definition.Вставить("ОГРН", Обк.ОГРН);
	definition.Вставить("Префикс", Обк.Префикс);
	definition.Вставить("СвидетельствоДатаВыдачи", Обк.СвидетельствоДатаВыдачи);
	definition.Вставить("СвидетельствоСерияНомер", Обк.СвидетельствоСерияНомер);
	definition.Вставить("СобственныйКонтрагент", ксп_ЭкспортСлужебный.СоздатьУзелIdentification(Обк.СобственныйКонтрагент));
	definition.Вставить("СпособОценкиТоваровВРознице", ксп_ЭкспортСлужебный.СоздатьУзелIdentification(Обк.СпособОценкиТоваровВРознице));
	definition.Вставить("УдалитьGCP", Обк.УдалитьGCP);
	definition.Вставить("УдалитьGLN", Обк.УдалитьGLN);
	definition.Вставить("ЮрФизЛицо", ксп_ЭкспортСлужебный.СоздатьУзелIdentification(Обк.ЮрФизЛицо));

	//------------------------------------------------------     ТЧ КонтактнаяИнформация

	ТЧКонтактнаяИнформация = Новый Массив;

	Для сч = 0 По обк.КонтактнаяИнформация.Количество()-1 Цикл

		стрк = обк.КонтактнаяИнформация[сч];

		НовСтр = Новый Структура;

		НовСтр.Вставить("АдресЭП", стрк.АдресЭП);
		НовСтр.Вставить("Вид", ксп_ЭкспортСлужебный.СоздатьУзелIdentification(стрк.Вид));
		НовСтр.Вставить("ВидДляСписка", ксп_ЭкспортСлужебный.СоздатьУзелIdentification(стрк.ВидДляСписка));
		НовСтр.Вставить("Город", стрк.Город);
		НовСтр.Вставить("ДействуетС", стрк.ДействуетС);
		НовСтр.Вставить("ДоменноеИмяСервера", стрк.ДоменноеИмяСервера);
		НовСтр.Вставить("Значение", стрк.Значение);
		НовСтр.Вставить("ЗначенияПолей", стрк.ЗначенияПолей);
		НовСтр.Вставить("НомерТелефона", стрк.НомерТелефона);
		НовСтр.Вставить("НомерТелефонаБезКодов", стрк.НомерТелефонаБезКодов);
		НовСтр.Вставить("Представление", стрк.Представление);
		НовСтр.Вставить("Регион", стрк.Регион);
		НовСтр.Вставить("Страна", стрк.Страна);
		НовСтр.Вставить("Тип", ксп_ЭкспортСлужебный.СоздатьУзелIdentification(стрк.Тип));
		ТЧКонтактнаяИнформация.Добавить(НовСтр);

	КонецЦикла;

	definition.Вставить("ТЧКонтактнаяИнформация", ТЧКонтактнаяИнформация);




	//------------------------------------------------------ ФИНАЛ


	СтруктураОбъекта.Вставить("definition", definition);
	ЗаписатьJSON(ЗаписьJson, СтруктураОбъекта);
	json = ЗаписьJson.Закрыть();
	Возврат json;
КонецФункции






